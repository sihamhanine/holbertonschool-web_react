/******/ (() => { // webpackBootstrap
/*!********************!*\
  !*** ./js/main.ts ***!
  \********************/
// Example of using the Teacher interface
var teacher3 = {
    firstName: 'John',
    lastName: 'Doe',
    fullTimeEmployee: false,
    location: 'London',
    contract: false, // Additional property not defined in the interface
};
console.log(teacher3);
// Example usage
var director1 = {
    firstName: 'John',
    lastName: 'Doe',
    location: 'London',
    fullTimeEmployee: true,
    yearsOfExperience: 10,
    numberOfReports: 17,
};
console.log(director1);
// Implement the printTeacher function
var printTeacher = function (firstName, lastName) {
    return "".concat(firstName.charAt(0), ". ").concat(lastName);
};
// Test the function
console.log(printTeacher("John", "Doe")); // Output: J. Doe
// Implement the class
var StudentClass = /** @class */ (function () {
    function StudentClass(_a) {
        var firstName = _a.firstName, lastName = _a.lastName;
        this.firstName = firstName;
        this.lastName = lastName;
    }
    StudentClass.prototype.workOnHomework = function () {
        return "Currently working";
    };
    StudentClass.prototype.displayName = function () {
        return this.firstName;
    };
    return StudentClass;
}());
// Example of using the class
var student = new StudentClass({ firstName: "John", lastName: "Doe" });
console.log(student.displayName()); // Output: John
console.log(student.workOnHomework()); // Output: Currently working

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFVQSx5Q0FBeUM7QUFDekMsSUFBTSxRQUFRLEdBQVk7SUFDdEIsU0FBUyxFQUFFLE1BQU07SUFDakIsUUFBUSxFQUFFLEtBQUs7SUFDZixnQkFBZ0IsRUFBRSxLQUFLO0lBQ3ZCLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFFBQVEsRUFBRSxLQUFLLEVBQUcsbURBQW1EO0NBQ3hFLENBQUM7QUFFRixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBTXRCLGdCQUFnQjtBQUNoQixJQUFNLFNBQVMsR0FBYztJQUN6QixTQUFTLEVBQUUsTUFBTTtJQUNqQixRQUFRLEVBQUUsS0FBSztJQUNmLFFBQVEsRUFBRSxRQUFRO0lBQ2xCLGdCQUFnQixFQUFFLElBQUk7SUFDdEIsaUJBQWlCLEVBQUUsRUFBRTtJQUNyQixlQUFlLEVBQUUsRUFBRTtDQUNwQixDQUFDO0FBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQVFyQixzQ0FBc0M7QUFDdEMsSUFBTSxZQUFZLEdBQXlCLFVBQUMsU0FBaUIsRUFBRSxRQUFnQjtJQUM3RSxPQUFPLFVBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBSyxRQUFRLENBQUUsQ0FBQztBQUMvQyxDQUFDLENBQUM7QUFFRixvQkFBb0I7QUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUI7QUFlN0Qsc0JBQXNCO0FBQ3RCO0lBSUUsc0JBQVksRUFBMkM7WUFBekMsU0FBUyxpQkFBRSxRQUFRO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFRCxxQ0FBYyxHQUFkO1FBQ0UsT0FBTyxtQkFBbUIsQ0FBQztJQUM3QixDQUFDO0lBRUQsa0NBQVcsR0FBWDtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBQ0gsbUJBQUM7QUFBRCxDQUFDO0FBRUQsNkJBQTZCO0FBQzdCLElBQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUN6RSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUUsZUFBZTtBQUNwRCxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUUsNEJBQTRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHlwZXNjcmlwdF9kZXBlbmRlbmNpZXMvLi9qcy9tYWluLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmluZSB0aGUgVGVhY2hlciBpbnRlcmZhY2VcclxuaW50ZXJmYWNlIFRlYWNoZXIge1xyXG4gICAgcmVhZG9ubHkgZmlyc3ROYW1lOiBzdHJpbmc7ICAvLyBjYW4gb25seSBiZSBzZXQgZHVyaW5nIGluaXRpYWxpemF0aW9uXHJcbiAgICByZWFkb25seSBsYXN0TmFtZTogc3RyaW5nOyAgIC8vIGNhbiBvbmx5IGJlIHNldCBkdXJpbmcgaW5pdGlhbGl6YXRpb25cclxuICAgIGZ1bGxUaW1lRW1wbG95ZWU6IGJvb2xlYW47XHJcbiAgICB5ZWFyc09mRXhwZXJpZW5jZT86IG51bWJlcjsgIC8vIG9wdGlvbmFsXHJcbiAgICBsb2NhdGlvbjogc3RyaW5nO1xyXG4gICAgW2tleTogc3RyaW5nXTogYW55OyAgICAgICAgICAvLyBmb3IgYWRkaXRpb25hbCBkeW5hbWljIHByb3BlcnRpZXNcclxufVxyXG5cclxuLy8gRXhhbXBsZSBvZiB1c2luZyB0aGUgVGVhY2hlciBpbnRlcmZhY2VcclxuY29uc3QgdGVhY2hlcjM6IFRlYWNoZXIgPSB7XHJcbiAgICBmaXJzdE5hbWU6ICdKb2huJyxcclxuICAgIGxhc3ROYW1lOiAnRG9lJyxcclxuICAgIGZ1bGxUaW1lRW1wbG95ZWU6IGZhbHNlLFxyXG4gICAgbG9jYXRpb246ICdMb25kb24nLFxyXG4gICAgY29udHJhY3Q6IGZhbHNlLCAgLy8gQWRkaXRpb25hbCBwcm9wZXJ0eSBub3QgZGVmaW5lZCBpbiB0aGUgaW50ZXJmYWNlXHJcbn07XHJcblxyXG5jb25zb2xlLmxvZyh0ZWFjaGVyMyk7XHJcblxyXG5pbnRlcmZhY2UgRGlyZWN0b3JzIGV4dGVuZHMgVGVhY2hlciB7XHJcbiAgICBudW1iZXJPZlJlcG9ydHM6IG51bWJlcjtcclxufVxyXG5cclxuLy8gRXhhbXBsZSB1c2FnZVxyXG5jb25zdCBkaXJlY3RvcjE6IERpcmVjdG9ycyA9IHtcclxuICAgIGZpcnN0TmFtZTogJ0pvaG4nLFxyXG4gICAgbGFzdE5hbWU6ICdEb2UnLFxyXG4gICAgbG9jYXRpb246ICdMb25kb24nLFxyXG4gICAgZnVsbFRpbWVFbXBsb3llZTogdHJ1ZSxcclxuICAgIHllYXJzT2ZFeHBlcmllbmNlOiAxMCxcclxuICAgIG51bWJlck9mUmVwb3J0czogMTcsXHJcbiAgfTtcclxuY29uc29sZS5sb2coZGlyZWN0b3IxKTtcclxuXHJcblxyXG4vLyBEZWZpbmUgdGhlIHByaW50VGVhY2hlckZ1bmN0aW9uIGludGVyZmFjZVxyXG5pbnRlcmZhY2UgcHJpbnRUZWFjaGVyRnVuY3Rpb24ge1xyXG4gICAgKGZpcnN0TmFtZTogc3RyaW5nLCBsYXN0TmFtZTogc3RyaW5nKTogc3RyaW5nO1xyXG4gIH1cclxuICBcclxuICAvLyBJbXBsZW1lbnQgdGhlIHByaW50VGVhY2hlciBmdW5jdGlvblxyXG4gIGNvbnN0IHByaW50VGVhY2hlcjogcHJpbnRUZWFjaGVyRnVuY3Rpb24gPSAoZmlyc3ROYW1lOiBzdHJpbmcsIGxhc3ROYW1lOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gICAgcmV0dXJuIGAke2ZpcnN0TmFtZS5jaGFyQXQoMCl9LiAke2xhc3ROYW1lfWA7XHJcbiAgfTtcclxuICBcclxuICAvLyBUZXN0IHRoZSBmdW5jdGlvblxyXG4gIGNvbnNvbGUubG9nKHByaW50VGVhY2hlcihcIkpvaG5cIiwgXCJEb2VcIikpOyAvLyBPdXRwdXQ6IEouIERvZVxyXG5cclxuXHJcbiAgLy8gRGVmaW5lIHRoZSBjb25zdHJ1Y3RvciBpbnRlcmZhY2VcclxuaW50ZXJmYWNlIFN0dWRlbnRDb25zdHJ1Y3RvciB7XHJcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XHJcbiAgbGFzdE5hbWU6IHN0cmluZztcclxufVxyXG5cclxuLy8gRGVmaW5lIHRoZSBjbGFzcyBpbnRlcmZhY2VcclxuaW50ZXJmYWNlIElTdHVkZW50Q2xhc3Mge1xyXG4gIHdvcmtPbkhvbWV3b3JrKCk6IHN0cmluZztcclxuICBkaXNwbGF5TmFtZSgpOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8vIEltcGxlbWVudCB0aGUgY2xhc3NcclxuY2xhc3MgU3R1ZGVudENsYXNzIGltcGxlbWVudHMgSVN0dWRlbnRDbGFzcyB7XHJcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XHJcbiAgbGFzdE5hbWU6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IoeyBmaXJzdE5hbWUsIGxhc3ROYW1lIH06IFN0dWRlbnRDb25zdHJ1Y3Rvcikge1xyXG4gICAgdGhpcy5maXJzdE5hbWUgPSBmaXJzdE5hbWU7XHJcbiAgICB0aGlzLmxhc3ROYW1lID0gbGFzdE5hbWU7XHJcbiAgfVxyXG5cclxuICB3b3JrT25Ib21ld29yaygpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIFwiQ3VycmVudGx5IHdvcmtpbmdcIjtcclxuICB9XHJcblxyXG4gIGRpc3BsYXlOYW1lKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5maXJzdE5hbWU7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBFeGFtcGxlIG9mIHVzaW5nIHRoZSBjbGFzc1xyXG5jb25zdCBzdHVkZW50ID0gbmV3IFN0dWRlbnRDbGFzcyh7IGZpcnN0TmFtZTogXCJKb2huXCIsIGxhc3ROYW1lOiBcIkRvZVwiIH0pO1xyXG5jb25zb2xlLmxvZyhzdHVkZW50LmRpc3BsYXlOYW1lKCkpOyAgLy8gT3V0cHV0OiBKb2huXHJcbmNvbnNvbGUubG9nKHN0dWRlbnQud29ya09uSG9tZXdvcmsoKSk7ICAvLyBPdXRwdXQ6IEN1cnJlbnRseSB3b3JraW5nXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==